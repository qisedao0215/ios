////  Car.m//  CarPartsV4////  Created by qingyun on 14-3-15.//  Copyright (c) 2014年 河南青云信息技术有限公司. All rights reserved.//#import "Car.h"@implementation Car//第一个小版本/*- (void)setEngine:(Engine *)newEngine{    //带来的问题， 多个对象（这里指main函数和Car）同时拥有engine对象，当在main里执行了释放engine    //对象的动作之后， 实际上内存的engine已经被系统从内存释放掉，那问题是：car拥有这个对象也相当于释放掉了    //这种情况，显然是不合适的。    engine = newEngine;} */ //第二个小版本/* - (void)setEngine:(Engine *)newEngine{//  当我们的main函数按如下操作的时候，会导致内存泄漏//     Car *car;//     car = [Car new];//     //     Engine *engine = [Engine new];//     [car setEngine:engine];//     [engine release];//     //     Engine *engine2 = [Engine new];//     [car setEngine:engine2];//    [newEngine retain];     engine = newEngine; } *///第三个小版本/*- (void) setEngine:(Engine *)newEngine{    [engine release];    engine = [newEngine retain];} *///第四个小版本- (void) setEngine:(Engine *)newEngine{    [newEngine retain];    [engine release];    engine = newEngine;}- (Engine*)engine{    return engine;}- (void)setTires:(Tire *)tire atIndex:(int)index{    if ((index < 0) || (index > 3)) {        //        NSLog(@"bad index (%d) in setTires:atIndex:",index);        NSLog(@"bad index (%d) in %s",index,__func__);        exit(1);//这个错误码能够在代码出错的时候，帮助我们定位错误。    }    tires[index] = tire;}- (Tire*)tireAtIndex:(int)index{    if ((index < 0) || (index > 3)) {        NSLog(@"bad index (%d) in tireAtIndex:",index);        NSLog(@"bad index (%d) in %s",index,__func__);        exit(1);//这个错误码能够在代码出错的时候，帮助我们定位错误。    }    return tires[index];}- (void)print{    NSLog(@"%@",engine);    NSLog(@"%@",tires[0]);    NSLog(@"%@",tires[1]);    NSLog(@"%@",tires[2]);    NSLog(@"%@",tires[3]);}@end